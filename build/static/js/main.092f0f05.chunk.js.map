{"version":3,"sources":["components/ContextProvider.js","components/App.js","components/PortalModal.js","hooks/useScript.js","hooks/use8thWallScripts.js","hooks/use8thWall.js","components/FullWindowCanvas.js","components/Experience.js","hooks/useContext.js","index.js"],"names":["Context","createContext","ContextProvider","_ref","children","props","Object","objectWithoutProperties","_React$useState","React","useState","_React$useState2","slicedToArray","ctx","setCtx","updateCtx","useCallback","newCtx","oldCtx","objectSpread","react_default","a","createElement","Provider","value","cloneElement","Experience","WrappedExperience","PortalModal","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rootElementType","el","document","rootElement","append","removeChild","ReactDOM","createPortal","Component","useScript","url","_useState","_useState2","isReady","setIsReady","_useState3","_useState4","script","setScript","useEffect","scr","type","src","async","addEventListener","body","use8thwallScripts","appKey","isScriptXrwebReady","concat","isScriptXrextrasReady","use8thWall","canvas","areScriptsReady","use8thWallScripts","XR8Object","setXR8Object","XRExtras","window","Loading","showLoading","onxrloaded","XR8","THREE","xrController","configure","disableWorldTracking","addCameraPipelineModules","GlTextureRenderer","pipelineModule","XrController","AlmostThere","RuntimeError","run","FullWindowCanvas","canvas_","gl","useThree","vsize_","orientation_","mycanvas_","domElement","canvasStyle_","position","width","height","margin","padding","border","display","top","left","mycanvasStyle_","bodyStyle_","fillScreenWithCanvas","uww","innerWidth","uwh","innerHeight","ww","devicePixelRatio","wh","requestAnimationFrame","ph","Math","max","pw","min","pa","pvh","w","h","pvw","ch","cw","round","tmp","assign","style","setTimeout","scrollTo","scrollY","updateVideoSize","videoWidth","videoHeight","addCameraPipelineModule","name","onUpdate","onStart","onDeviceOrientationChange","onCanvasSizeChange","onVideoSizeChange","onCameraStatusChange","_ref2","orientation","getElementsByTagName","appendChild","_ref3","_ref4","_ref5","status","video","withContext","esm_extends","context","useReactContext","Error","useContext","_useThree","scene","camera","tapTarget","setTapTarget","$surface","useRef","$box","id","useFrame","clearDepth","render","xrScene","canvasWidth","canvasHeight","setSize","aspect","updateProjectionMatrix","autoClear","antialias","renderer","updateCameraProjectionMatrix","origin","facing","quaternion","processCpuResult","data","reality","intrinsics","rotation","elements","projectionMatrix","i","projectionMatrixInverse","getInverse","setRotationFromQuaternion","copy","web","concurrent","zIndex","shadowMap","updateDefaultCamera","fov","intensity","angle","penumbra","shadow-mapSize-width","shadow-mapSize-height","castShadow","onPointerDown","e","intersections","point","receiveShadow","ref","rotation-x","PI","attach","args","opacity","visible","userData","hello","color","components_FullWindowCanvas","xr8Config","cameraFeed","current","react","components_PortalModal","onComplete","action","result","console","log","alert","ComponentWrapper","componentProps","components_Experience","asyncToGenerator","regenerator_default","mark","_callee","fetchData","wrap","_context","prev","next","fetch","sent","json","src_ComponentWrapper","querySelector","stop","apply","arguments","initComponent"],"mappings":"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","file":"static/js/main.092f0f05.chunk.js","sourcesContent":["import React, { createContext, useCallback } from 'react';\n\nexport const Context = createContext(null);\n\nexport default function ContextProvider ({children, ...props})  {\n\tconst [ctx, setCtx] = React.useState({});\n\n    const updateCtx = useCallback((newCtx) => {\n        setCtx((oldCtx) => ({ ...oldCtx, ...newCtx }));\n    }, [setCtx]);\n\n    return (\n\t    <Context.Provider value={{\n\t            ...ctx,\n\t            ...props,\n\t            updateCtx,            \n\t        }}>\n            {React.cloneElement(children, {\n                ...ctx,\n                ...props,\n                updateCtx,                \n            })}\n\t    </Context.Provider>\n\t);\n}\n\nexport function withContext(Experience) {\n    function WrappedExperience({...props }) {\n        return (\n            <ContextProvider {...props}>\n                <Experience />\n            </ContextProvider>\n        );\n    }\n\n    return WrappedExperience;\n}","import React, { Fragment, useRef } from \"react\";\nimport PortalModal from \"./PortalModal\";\nimport use8thWall from \"../hooks/use8thWall\";\n\nexport const withLauncher = (Experience) => {\n  const WrappedExperience = ({ appKey, xr8Config, updateCtx, ...props }) => {\n    const cameraFeed = useRef(null);\n\n    const XR8 = use8thWall(appKey, cameraFeed.current);\n\n    return (\n      <Fragment>\n        <PortalModal rootElement={document.body}>\n          <canvas ref={cameraFeed} />\n        </PortalModal>\n        {XR8 && <Experience XR8={XR8} xr8Config={xr8Config} {...props} />}\n      </Fragment>\n    )\n  }\n  return (props) => <WrappedExperience {...props} />\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n * Render all children components in another element in the DOM\n */\nclass PortalModal extends React.Component {\n    constructor(props) {\n        super(props);\n        const { rootElementType } = props;\n        this.el = document.createElement(rootElementType);\n    }\n\n    componentDidMount() {\n        const { rootElement } = this.props;\n        rootElement.append(this.el);\n    }\n\n    componentWillUnmount() {\n        const { rootElement } = this.props;\n        rootElement.removeChild(this.el);\n    }\n\n    render() {\n        const { children } = this.props;\n        return ReactDOM.createPortal(\n            children,\n            this.el,\n        );\n    }\n}\n\nexport default PortalModal;\n","import { useEffect, useState } from \"react\";\n\nconst useScript = (url) => {\n  const [isReady, setIsReady] = useState(false);\n  const [script, setScript] = useState(null);\n\n  useEffect(() => {\n    if (url) {\n      const scr = document.createElement(\"script\");\n      scr.type = \"text/javascript\";\n      scr.src = url;\n      scr.async = true;\n\n      scr.addEventListener(\"load\", () => {\n        setIsReady(true);\n      });\n\n      document.body.append(scr);\n      setScript(scr);\n    }\n  }, [url]);\n\n  useEffect(\n    () => () => {\n      if (script) {\n        document.body.removeChild(script);\n      }\n    },\n    [script]\n  );\n\n  return isReady;\n};\n\nexport default useScript;\n","import { useEffect, useState } from \"react\";\nimport useScript from \"./useScript\";\n\nconst use8thwallScripts = (appKey) => {\n  const [isReady, setIsReady] = useState(false);\n  const isScriptXrwebReady = useScript(\n    `//apps.8thwall.com/xrweb?appKey=${appKey}`\n  );\n  const isScriptXrextrasReady = useScript(\n    \"//cdn.8thwall.com/web/xrextras/xrextras.js\"\n  );\n\n  useEffect(() => {\n    if (isScriptXrwebReady && isScriptXrextrasReady) {\n      setIsReady(true);\n    }\n  }, [isScriptXrwebReady, isScriptXrextrasReady]);\n\n  return isReady;\n};\n\nexport default use8thwallScripts;\n","import { useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport use8thWallScripts from \"./use8thWallScripts\";\n\nconst use8thWall = (appKey, canvas) => {\n  const areScriptsReady = use8thWallScripts(appKey);\n  const [XR8Object, setXR8Object] = useState(null);\n\n  useEffect(() => {\n    if (!XR8Object && areScriptsReady && canvas) {\n      const { XRExtras } = window;\n\n      XRExtras.Loading.showLoading({\n        onxrloaded: () => {\n          const { XR8 } = window;\n          window.THREE = THREE;\n\n          XR8.xrController().configure({ disableWorldTracking: false });\n          XR8.addCameraPipelineModules([\n            XR8.GlTextureRenderer.pipelineModule(),\n            XR8.XrController.pipelineModule(),\n            XRExtras.AlmostThere.pipelineModule(),\n            XRExtras.Loading.pipelineModule(),\n            XRExtras.RuntimeError.pipelineModule(),\n          ]);\n\n          XR8.run({ canvas });\n\n          setXR8Object(XR8);\n        },\n      });\n    }\n  }, [XR8Object, areScriptsReady, canvas]);\n\n  return XR8Object;\n};\n\nexport default use8thWall;\n","import React, { useEffect } from 'react';\nimport { useThree } from 'react-three-fiber';\n\nconst FullWindowCanvas = () => {\n\tconst {gl} = useThree();\n\n\tconst {\n\t    XR8,\n\t} = window;\n\n\tconst vsize_ = {}\n  \tlet orientation_ = 0\n  \tlet mycanvas_ = gl.domElement\n  \tlet canvas_ \n\n  \tconst canvasStyle_ = {\n\t    position: 'static',\n\t    width: '100%',\n\t    height: '100%',\n\t    margin: '0px',\n\t    padding: '0px',\n\t    border: '0px',\n\t    display: 'block',\n\t    top: '0px',\n\t    left: '0px',\n  \t}\n\n\tconst mycanvasStyle_ = {\n\t    position: 'fixed',\n\t    width: '100%',\n\t    height: '100%',\n\t    margin: '0px',\n\t    padding: '0px',\n\t    border: '0px',\n\t    display: 'block',\n\t    top: '0px',\n\t    left: '0px'\n  \t}\n\n  \tconst bodyStyle_ = {\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\t\tmargin: '0px',\n\t\tpadding: '0px',\n\t\tborder: '0px',\n\t}\n\n\tconst fillScreenWithCanvas = () => {\n\t\tif (!canvas_) { return }\n\t\t// Get the pixels of the browser window.\n\t    const uww = window.innerWidth\n\t    const uwh = window.innerHeight\n\t    const ww = uww * devicePixelRatio\n\t    const wh = uwh * devicePixelRatio\n\n\t\t// Wait for orientation change to take effect before handline resize.\n\t\tif (((orientation_ === 0 || orientation_ === 180) && ww > wh) || ((orientation_ === 90 || orientation_ === -90) && wh > ww)) {\n\t\t\t\twindow.requestAnimationFrame(fillScreenWithCanvas)\n\t\t\t\treturn\n\t\t}\n\t\t\n\t\t// Compute the portrait-orientation aspect ratio of the browser window.\n\t    const ph = Math.max(ww, wh)\n\t    const pw = Math.min(ww, wh)\n\t    const pa = ph / pw\n\t    // Compute the portrait-orientation dimensions of the video.\n\t    const pvh = Math.max(vsize_.w, vsize_.h)\n\t    const pvw = Math.min(vsize_.w, vsize_.h)\n\t    // Compute the cropped dimensions of a video that fills the screen, assuming that width is\n\t    // cropped.\n\t    let ch = pvh\n\t    let cw = Math.round(pvh / pa)\n\t\t// Figure out if we should have cropped from the top, and if so, compute a new cropped video\n\t\t// dimension.\n\t\tif (cw > pvw) {\n\t\t\tcw = pvw\n\t\t\tch = Math.round(pvw * pa)\n\t\t}\n\t\t\n\t\t// If the video has more pixels than the screen, set the canvas size to the screen pixel\n\t\t// resolution.\n\t\tif (cw > pw || ch > ph) {\n\t\t\tcw = pw\n\t\t\tch = ph\n\t\t}\n\n\t\t// Switch back to a landscape aspect ratio if required.\n\t\tif (ww > wh) {\n\t\t\tlet tmp = cw\n\t\t\tcw = ch\n\t\t\tch = tmp\n\t\t}\n\n\t\t// Set the canvas geometry to the new window size.\n\t\tObject.assign(canvas_.style, canvasStyle_)\n\t\tcanvas_.width = cw\n\t\tcanvas_.height = ch\n\t\tObject.assign(mycanvas_.style, mycanvasStyle_)\n\t\tmycanvas_.width = cw\n\t\tmycanvas_.height = ch\n\n\t\t// on iOS, rotating from portrait to landscape back to portrait can lead to a situation where\n\t    // address bar is hidden and the content doesn't fill the screen. Scroll back up to the top in\n\t    // this case. In chrome this has no effect. We need to scroll to something that's not our\n\t    // scroll position, so scroll to 0 or 1 depending on the current position.\n\t    setTimeout(() => window.scrollTo(0, (window.scrollY + 1) % 2), 300)\n\t}\n\n\tconst updateVideoSize = ({videoWidth, videoHeight}) => {\n\t\tvsize_.w = videoWidth\n\t\tvsize_.h = videoHeight\n\t}\n\n\tuseEffect(() => {\n\t\tXR8.addCameraPipelineModule({\n\t\t\tname: 'fullwindow-canvas',\n\t\t\tonUpdate,\n\t\t\tonStart,\n\t\t\tonDeviceOrientationChange,\n\t\t\tonCanvasSizeChange,\n\t\t\tonVideoSizeChange,\n\t\t\tonCameraStatusChange\n\t\t});\n\t});\n\n\tconst onUpdate = () => {\n\t\tif (canvas_.style.width === canvasStyle_.width && canvas_.style.height === canvasStyle_.height) {\n  \t\t\treturn\n\t\t}\n\n\t\tfillScreenWithCanvas()\n\t}\n\n\tconst onStart = ({canvas, orientation}) => {\n\n\t\tcanvas_ = canvas\n\t\torientation_ = orientation\n\t\tcanvas_.style = canvasStyle_\n\t\tmycanvas_.style = mycanvasStyle_\n\t\tconst body = document.getElementsByTagName('body')[0]\n\t\tObject.assign(body.style, bodyStyle_)\n\t\tbody.appendChild(canvas_)\n\n\t\tfillScreenWithCanvas()\n\t}\n\n\tconst onVideoSizeChange = ({videoWidth, videoHeight}) => {\n\t\tupdateVideoSize({videoWidth, videoHeight})\n\t\tfillScreenWithCanvas()\n\t}\n\n\tconst onCanvasSizeChange = () => {\n\t\tfillScreenWithCanvas()\n\t}\n\n\tconst onDeviceOrientationChange = ({orientation}) => {\n\n\t\torientation_ = orientation\n\t\tfillScreenWithCanvas()\n\t}\n\n\tconst onCameraStatusChange = ({status, video}) => {\n\t\tif (status !== 'hasVideo') {\n  \t\t\treturn\n\t\t}\n\n\t\tupdateVideoSize(video)\n\t}\n\n\treturn null\n}\n\nexport default FullWindowCanvas;","import React, { useEffect, useRef, useState } from 'react';\nimport { Canvas, useFrame, useThree } from 'react-three-fiber';\nimport useContext from '../hooks/useContext';\nimport { withLauncher } from './App';\nimport { withContext } from './ContextProvider';\nimport FullWindowCanvas from './FullWindowCanvas';\n\nconst Component = ({ XR8 }) => {\n    const {\n        updateCtx,\n    } = useContext();\n\n    useEffect(() => {\n        if (XR8) {\n            updateCtx({ XR8 });\n        }\n    }, [XR8, updateCtx]);\n\n    const { scene, gl, camera } = useThree();\n\n    const [tapTarget, setTapTarget] = useState(null);\n    const $surface = useRef();\n    const $box = useRef();\n\n    const canvas = gl.domElement\n    canvas.id = \"xr-three\"\n\n    useFrame(({ gl, scene, camera }) => {\n\n        gl.clearDepth();\n        gl.render(scene, camera);\n\n    }, 1)\n\n    useEffect(() => {\n        XR8.addCameraPipelineModule({\n            name: 'xrthree',\n            onStart,\n            onUpdate,\n            //onRender,\n            onCanvasSizeChange,\n            xrScene: xrScene\n        });\n    });\n\n    const onCanvasSizeChange = ({ canvasWidth, canvasHeight }) => {\n        gl.setSize(canvasWidth, canvasHeight);\n        camera.aspect = canvasWidth / canvasHeight\n        camera.updateProjectionMatrix()\n    }\n\n    const onStart = ({ canvasWidth, canvasHeight }) => {\n\n        gl.autoClear = false;\n        gl.setSize(canvasWidth, canvasHeight);\n        gl.antialias = true;\n\n        updateCtx({\n            scene,\n            camera,\n            renderer: gl,\n        })\n\n        XR8.XrController.updateCameraProjectionMatrix({\n            origin: camera.position,\n            facing: camera.quaternion,\n        });\n    }\n\n    const onUpdate = ({ processCpuResult }) => {\n\n        camera.updateProjectionMatrix()\n\n        let data = processCpuResult.reality\n        if (!(data && data.intrinsics)) return\n\n        let { intrinsics, position, rotation } = data\n        let { elements } = camera.projectionMatrix\n\n        for (let i = 0; i < 16; i++) {\n            elements[i] = intrinsics[i]\n        }\n\n        camera.projectionMatrixInverse.getInverse(camera.projectionMatrix);\n        camera.setRotationFromQuaternion(rotation)\n        camera.position.copy(position)\n    }\n\n\n    const xrScene = () => {\n        return { scene, camera, renderer: gl };\n    }\n\n    return (\n        <Canvas concurrent={true} style={{ width: '100%', height: '100%', position: 'absolute', left: '0px', top: '0px', zIndex: 100 }} shadowMap updateDefaultCamera={false} camera={{ position: [0, 0, 5], fov: 60 }}>\n            <ambientLight intensity={0.5} />\n            <spotLight\n                intensity={0.6}\n                position={[20, 10, 10]}\n                angle={0.2}\n                penumbra={1}\n                shadow-mapSize-width={1024}\n                shadow-mapSize-height={1024}\n                castShadow\n            />\n            <group>\n                <mesh onPointerDown={(e) => setTapTarget(e.intersections[0].point)} receiveShadow position={[0, 0, 0]} ref={$surface} rotation-x={-Math.PI / 2}>\n                    <planeGeometry\n                        attach='geometry'\n                        args={[100, 100, 1, 1]}\n                    />\n                    <shadowMaterial\n                        opacity={0.3}\n                    />\n                </mesh>\n                <mesh castShadow position={tapTarget} visible={!!tapTarget} ref={$box} userData={{ hello: 'yop' }} >\n                    <boxGeometry args={[1, 1, 1]} />\n                    <meshStandardMaterial color=\"hotpink\" />\n                </mesh>\n            </group>\n            )\n\n            <FullWindowCanvas />\n        </Canvas>\n    )\n}\n\nexport default withContext(withLauncher(Component))","import { useContext as useReactContext } from 'react';\nimport { Context } from '../components/ContextProvider';\n\nexport default function useContext() {\n    const context = useReactContext(Context);\n\n    if (!context) {\n        throw new Error('No proper appStateContext provided');\n    }\n    \n    return context;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Component from './components/Experience';\n\nconst onComplete = (action, result) => {\n    console.log('onComplete has been triggered');\n    console.log('action =', action);\n    console.log('result =', result);\n    alert('Check your logs!');\n}\n\nconst ComponentWrapper = (componentProps) => {\n    \n   \tif (!componentProps) {\n        return null;\n    }\n\n    return (\n        <Component\n            {...componentProps}\n        />\n    );\n};\n\nconst initComponent = async () => {\n    const fetchData = await fetch('config.json');\n    const componentProps = await fetchData.json();\n\n    ReactDOM.render(\n        <ComponentWrapper\n            onComplete={onComplete}\n            {...componentProps}\n        />,\t\n        document.querySelector('#root'),\n    );\n};\n\ninitComponent();\n"],"sourceRoot":""}